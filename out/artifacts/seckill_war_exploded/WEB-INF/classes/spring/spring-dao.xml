<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
     xmlns:context="http://www.springframework.org/schema/context"  
     xsi:schemaLocation="http://www.springframework.org/schema/beans 
     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
     http://www.springframework.org/schema/context 
     http://www.springframework.org/schema/context/spring-context-3.0.xsd">   

        <!-- 占位符，使用jdbc配置 -->
	<context:property-placeholder location="classpath:jdbc.properties" />
	<!-- 配置数据库连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- 配置连接池属性 -->
		<property name="driverClass" value="${driver}"/>
		<property name="jdbcUrl" value="${url}" />
		<property name="user" value="${username}" />
		<property name="password" value="${password}" />
		
		<!-- 配置连接池私有属性 -->
		<!-- 最大连接数 -->
		<property name="maxPoolSize" value="30" />
		<!-- 最小连接数 -->
		<property name="minPoolSize" value="10" />
		<!-- 连接关闭时默认将所有未提交的操作回滚 -->
		<property name="autoCommitOnClose" value="false" />
		<!--当连接池用完时客户端调用getConnection()后等待获取新连接的时间，超时后将抛出SQLException,如设为0则无限期等待。单位毫秒 -->
		<property name="checkoutTimeout" value="1000"/>
		<!-- 定义在从数据库获取新连接失败后重复尝试的次数-->
		<property name="acquireRetryAttempts" value="2" />
	</bean>
	
      <!-- 配置sqlSessionFactory -->
      <bean name="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
      	<!-- 注入数据库连接池 -->
      	<property name="dataSource" ref="dataSource" />
      	<!-- 配置mybatis-config.xml文件 -->
      	<property name="configLocation" value="classpath:mybatis-config.xml" />
      	<!-- 扫描entity包，使用别名 -->
      	<property name="typeAliasesPackage" value="entity" />
      	<!-- 扫描mapper -->
      	<property name="mapperLocations" value="classpath:mapper/*.xml" />
      </bean>
      
      <!-- 配置扫描dao包，动态实现接口，注入到spring容器 -->
      <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"> 
      	<!-- 注入sqlSessionFactory -->
      	<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
      	<!-- 扫描dao接口 -->
      	<property name="basePackage" value="dao" />
      </bean>

		<!-- 注册redis -->
		<bean id="redis" class="dao.cache.RedisDao" >
			<constructor-arg index="0" value="localhost" />
			<constructor-arg index="1" value="6379" />
		</bean>
</beans>